name: Release workflow

on:
  release:
    types:
      - published

  pull_request:
    branches:
      - master

  workflow_dispatch:

jobs:
  build-release:
    name: build-release (${{ matrix.targets }})
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        include:
          - operating-system: ubuntu-22.04
            targets: x86_64-unknown-linux-gnu
          - operating-system: ubuntu-22.04
            targets: x86_64-unknown-linux-musl
          - operating-system: ubuntu-22.04
            targets: aarch64-unknown-linux-gnu
          - operating-system: ubuntu-22.04
            targets: aarch64-unknown-linux-musl
          - operating-system: windows-2022
            targets: x86_64-pc-windows-msvc
          - operating-system: windows-2022
            targets: aarch64-pc-windows-msvc
          - operating-system: macos-15-intel
            targets: x86_64-apple-darwin
          - operating-system: macos-15
            targets: aarch64-apple-darwin
      fail-fast: false

    env:
      pact_do_not_track: true

    steps:
      - uses: actions/checkout@v4

      - name: Install stable Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.targets }}

      - name: Rust caching
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: rust
          key: ${{ matrix.targets }}

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: runner.os == 'Linux'
        uses: docker/setup-buildx-action@v3

      - name: Platform abbreviation
        id: platform-abbreviation
        shell: bash
        run: |
          if [[ "${{ runner.os }}" = "Linux" ]]; then
            echo "platform=linux" >> "$GITHUB_OUTPUT"
          elif [[ "${{ runner.os }}" = "Windows" ]]; then
            echo "platform=win" >> "$GITHUB_OUTPUT"
          elif [[ "${{ runner.os }}" = "macOS" ]]; then
            echo "platform=macos" >> "$GITHUB_OUTPUT"
          else
            echo "Unknown platform"
            exit 1
          fi

      - name: Cargo flags
        id: cargo-flags
        shell: bash
        run: |
          echo "flags=--release" >> "$GITHUB_OUTPUT"

      - name: Build verifier CLI
        if: |
          github.event_name == 'push' ||
          github.event_name == 'pull_request' ||
          github.event_name == 'workflow_dispatch' ||
          startsWith(github.ref, 'refs/tags/pact_verifier_cli')
        shell: bash
        run: |
          ./release-${{ steps.platform-abbreviation.outputs.platform }}.sh ${{ matrix.targets }} \
            ${{ steps.cargo-flags.outputs.flags }}
        working-directory: rust/pact_verifier_cli

      - name: Build FFI library
        if: |
          github.event_name == 'push' ||
          github.event_name == 'pull_request' ||
          github.event_name == 'workflow_dispatch' ||
          startsWith(github.ref, 'refs/tags/libpact_ffi')
        shell: bash
        run: |
          ./release-${{ steps.platform-abbreviation.outputs.platform }}.sh ${{ matrix.targets }} \
            ${{ steps.cargo-flags.outputs.flags }}
        working-directory: rust/pact_ffi

      - name: Upload Release Assets
        if: ${{ github.event_name == 'release' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: rust/release_artifacts/*
          file_glob: true
          tag: ${{ github.ref }}
